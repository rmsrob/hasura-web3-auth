name: Build & migrate Hasura
on:
  pull_request:
    paths:
      - 'hasura'
  push:
    branches:
      - master
    paths:
      - 'hasura'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgrespassword
        restart: always
        ports:
        # will assign a random free host port
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
      hasura:
        image: hasura/graphql-engine:latest
        depends_on:
          - postgres
        restart: always
        environment:
          HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
          HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
          PG_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
          HASURA_GRAPHQL_ADMIN_SECRET: hasuraadminpassword
        ports:
          - 8080:8080


    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Install Hasura cli
        run: curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash

      # - name: 🐳 jwt
      #   run: |
      #     cd hasura
      #     docker network create netrunner-web3-auth
      #     cp -i .env.example .env

      # - name: 🐳 up
      #   run: |
      #     cd hasura
      #     docker-compose up -d

      # - name: Sleep
      #   uses: jakejarvis/wait-action@master
      #   with:
      #   time: '60s'

      - name: 🐳  Check running containers
        run:  |
          cd hasura
          docker ps -a


      - name: 🐳 Hasura metadata
        run: |
          cd hasura
          hasura migrate status --skip-update-check --endpoint http://localhost:8080
          
      # --endpoint "http://localhost:8080" --admin-secret "hasuraadminpassword"

      # - name: 🐳 Hasura migrate
      #   run: |
      #     cd hasura
      #     hasura migrate apply --endpoint "http://localhost:8080" --admin-secret "hasuraadminpassword"

      # - name: 🐳 Hasura metadata
      #   run: |
      #     cd hasura
      #     hasura metadata reload --endpoint "http://localhost:8080" --admin-secret "hasuraadminpassword"

      # - name: 🐳 Docker up and metadata
      #   run: |
      #     cd hasura
      #     hasura migrate status  --database-name postgres

      # - name: 🏗 Setup Node 14
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'

      # - name: npm install, build, and test
      #   run: |
      #     node index.js
      #   env:
      #     CI: true

      # curl 'https://countries.trevorblades.com/' \
      # -X POST \
      # -H 'content-type: application/json' \
      # --data '{
      #   "query": "{ continents { code name } }"
      # }' | python -m json.tool